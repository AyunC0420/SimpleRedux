{"ast":null,"code":"function createStore(state, stateChanger) {\n  const listeners = [];\n\n  const subscribe = listener => listeners.push(listener);\n\n  const getState = () => state;\n\n  const dispatch = action => {\n    stateChanger(state, action);\n    listeners.forEach(listener => listener());\n  };\n\n  return {\n    getState,\n    dispatch,\n    subscribe\n  };\n}\n\nfunction renderApp(appState) {\n  renderTitle(appState.title);\n  renderContent(appState.content);\n}\n\nfunction renderTitle(title) {\n  const titleDOM = document.getElementById('title');\n  titleDOM.innerHTML = title.text;\n  titleDOM.style.color = title.color;\n}\n\nfunction renderContent(content) {\n  const contentDOM = document.getElementById('content');\n  contentDOM.innerHTML = content.text;\n  contentDOM.style.color = content.color;\n}\n\nlet appState = {\n  title: {\n    text: 'React.js 小书',\n    color: 'red'\n  },\n  content: {\n    text: 'React.js 小书内容',\n    color: 'blue'\n  }\n};\n\nfunction stateChanger(state, action) {\n  switch (action.type) {\n    case 'UPDATE_TITLE_TEXT':\n      state.title.text = action.text;\n      break;\n\n    case 'UPDATE_TITLE_COLOR':\n      state.title.color = action.color;\n      break;\n\n    default:\n      break;\n  }\n}\n\nconst store = createStore(appState, stateChanger);\nstore.subscribe(() => renderApp(store.getState())); // 监听数据变化\n\nrenderApp(store.getState()); // 首次渲染页面\n\nstore.dispatch({\n  type: 'UPDATE_TITLE_TEXT',\n  text: '《React.js 小书》'\n}); // 修改标题文本\n\nstore.dispatch({\n  type: 'UPDATE_TITLE_COLOR',\n  color: 'blue'\n}); // 修改标题颜色","map":{"version":3,"sources":["/Users/guanheng/Desktop/Learn/react小书-高阶组件/src/index.js"],"names":["createStore","state","stateChanger","listeners","subscribe","listener","push","getState","dispatch","action","forEach","renderApp","appState","renderTitle","title","renderContent","content","titleDOM","document","getElementById","innerHTML","text","style","color","contentDOM","type","store"],"mappings":"AAAA,SAASA,WAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2C;AACzC,QAAMC,SAAS,GAAG,EAAlB;;AACA,QAAMC,SAAS,GAAIC,QAAD,IAAcF,SAAS,CAACG,IAAV,CAAeD,QAAf,CAAhC;;AACA,QAAME,QAAQ,GAAG,MAAMN,KAAvB;;AACA,QAAMO,QAAQ,GAAIC,MAAD,IAAY;AAC3BP,IAAAA,YAAY,CAACD,KAAD,EAAQQ,MAAR,CAAZ;AACAN,IAAAA,SAAS,CAACO,OAAV,CAAmBL,QAAD,IAAcA,QAAQ,EAAxC;AACD,GAHD;;AAIA,SAAO;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBJ,IAAAA;AAAtB,GAAP;AACD;;AAED,SAASO,SAAT,CAAoBC,QAApB,EAA8B;AAC5BC,EAAAA,WAAW,CAACD,QAAQ,CAACE,KAAV,CAAX;AACAC,EAAAA,aAAa,CAACH,QAAQ,CAACI,OAAV,CAAb;AACD;;AAED,SAASH,WAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMG,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAjB;AACAF,EAAAA,QAAQ,CAACG,SAAT,GAAqBN,KAAK,CAACO,IAA3B;AACAJ,EAAAA,QAAQ,CAACK,KAAT,CAAeC,KAAf,GAAuBT,KAAK,CAACS,KAA7B;AACD;;AAED,SAASR,aAAT,CAAwBC,OAAxB,EAAiC;AAC/B,QAAMQ,UAAU,GAAGN,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAnB;AACAK,EAAAA,UAAU,CAACJ,SAAX,GAAuBJ,OAAO,CAACK,IAA/B;AACAG,EAAAA,UAAU,CAACF,KAAX,CAAiBC,KAAjB,GAAyBP,OAAO,CAACO,KAAjC;AACD;;AAED,IAAIX,QAAQ,GAAG;AACbE,EAAAA,KAAK,EAAE;AACLO,IAAAA,IAAI,EAAE,aADD;AAELE,IAAAA,KAAK,EAAE;AAFF,GADM;AAKbP,EAAAA,OAAO,EAAE;AACPK,IAAAA,IAAI,EAAE,eADC;AAEPE,IAAAA,KAAK,EAAE;AAFA;AALI,CAAf;;AAWA,SAASrB,YAAT,CAAuBD,KAAvB,EAA8BQ,MAA9B,EAAsC;AACpC,UAAQA,MAAM,CAACgB,IAAf;AACE,SAAK,mBAAL;AACExB,MAAAA,KAAK,CAACa,KAAN,CAAYO,IAAZ,GAAmBZ,MAAM,CAACY,IAA1B;AACA;;AACF,SAAK,oBAAL;AACEpB,MAAAA,KAAK,CAACa,KAAN,CAAYS,KAAZ,GAAoBd,MAAM,CAACc,KAA3B;AACA;;AACF;AACE;AARJ;AAUD;;AAED,MAAMG,KAAK,GAAG1B,WAAW,CAACY,QAAD,EAAWV,YAAX,CAAzB;AACAwB,KAAK,CAACtB,SAAN,CAAgB,MAAMO,SAAS,CAACe,KAAK,CAACnB,QAAN,EAAD,CAA/B,E,CAAmD;;AAEnDI,SAAS,CAACe,KAAK,CAACnB,QAAN,EAAD,CAAT,C,CAA4B;;AAC5BmB,KAAK,CAAClB,QAAN,CAAe;AAAEiB,EAAAA,IAAI,EAAE,mBAAR;AAA6BJ,EAAAA,IAAI,EAAE;AAAnC,CAAf,E,CAAqE;;AACrEK,KAAK,CAAClB,QAAN,CAAe;AAAEiB,EAAAA,IAAI,EAAE,oBAAR;AAA8BF,EAAAA,KAAK,EAAE;AAArC,CAAf,E,CAA8D","sourcesContent":["function createStore (state, stateChanger) {\n  const listeners = []\n  const subscribe = (listener) => listeners.push(listener)\n  const getState = () => state\n  const dispatch = (action) => {\n    stateChanger(state, action)\n    listeners.forEach((listener) => listener())\n  }\n  return { getState, dispatch, subscribe }\n}\n\nfunction renderApp (appState) {\n  renderTitle(appState.title)\n  renderContent(appState.content)\n}\n\nfunction renderTitle (title) {\n  const titleDOM = document.getElementById('title')\n  titleDOM.innerHTML = title.text\n  titleDOM.style.color = title.color\n}\n\nfunction renderContent (content) {\n  const contentDOM = document.getElementById('content')\n  contentDOM.innerHTML = content.text\n  contentDOM.style.color = content.color\n}\n\nlet appState = {\n  title: {\n    text: 'React.js 小书',\n    color: 'red',\n  },\n  content: {\n    text: 'React.js 小书内容',\n    color: 'blue'\n  }\n}\n\nfunction stateChanger (state, action) {\n  switch (action.type) {\n    case 'UPDATE_TITLE_TEXT':\n      state.title.text = action.text\n      break\n    case 'UPDATE_TITLE_COLOR':\n      state.title.color = action.color\n      break\n    default:\n      break\n  }\n}\n\nconst store = createStore(appState, stateChanger)\nstore.subscribe(() => renderApp(store.getState())) // 监听数据变化\n\nrenderApp(store.getState()) // 首次渲染页面\nstore.dispatch({ type: 'UPDATE_TITLE_TEXT', text: '《React.js 小书》' }) // 修改标题文本\nstore.dispatch({ type: 'UPDATE_TITLE_COLOR', color: 'blue' }) // 修改标题颜色\n"]},"metadata":{},"sourceType":"module"}