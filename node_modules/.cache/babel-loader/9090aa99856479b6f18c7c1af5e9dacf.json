{"ast":null,"code":"function createStore(state, stateChanger) {\n  const listeners = [];\n\n  const subscribe = listener => listeners.push(listener);\n\n  const getState = () => state;\n\n  const dispatch = action => {\n    stateChanger(action, state);\n    listeners.forEach(listener => listener());\n  };\n\n  return {\n    getState,\n    subscribe,\n    dispatch\n  };\n}\n\nfunction renderApp(appState) {\n  renderTitle(appState.title);\n  renderContent(appState.content);\n}\n\nfunction renderTitle(title) {\n  const titleDOM = document.getElementById(\"title\");\n  titleDOM.innerHTML = title.text;\n  titleDOM.style.color = title.color;\n}\n\nfunction renderContent(content) {\n  const contentDOM = document.getElementById(\"content\");\n  contentDOM.innerHTML = content.text;\n  contentDOM.style.color = content.color;\n}\n\nlet appState = {\n  title: {\n    text: \"React.js 小书\",\n    color: \"red\"\n  },\n  content: {\n    text: \"React.js 小书内容\",\n    color: \"blue\"\n  }\n};\n\nfunction stateChanger(action, state) {\n  //具体修改内容\n  switch (action.type) {\n    case \"UPDATE_TITLE_TEXT\":\n      state.title.text = action.text;\n      break;\n\n    case \"UPDATE_CONTENT_COLOR\":\n      state.title.color = action.color;\n\n    default:\n      break;\n  }\n}\n\nconst store = createStore(appState, stateChanger); //数据仓库构建\n\nstore.subscribe(() => renderApp(store.getState()));\nrenderApp(store.getState()); // 首次渲染页面\n\nstore.dispatch({\n  type: \"UPDATE_TITLE_TEXT\",\n  text: \"《React.js 小书》\"\n}); // 修改标题文本\n\nstore.dispatch({\n  type: \"UPDATE_TITLE_COLOR\",\n  color: \"blue\"\n}); // 修改标题颜色\n\nrenderApp(store.getState());","map":{"version":3,"sources":["/Users/guanheng/Desktop/Learn/gitredux/SimpleRedux/src/index.js"],"names":["createStore","state","stateChanger","listeners","subscribe","listener","push","getState","dispatch","action","forEach","renderApp","appState","renderTitle","title","renderContent","content","titleDOM","document","getElementById","innerHTML","text","style","color","contentDOM","type","store"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,YAA5B,EAA0C;AACxC,QAAMC,SAAS,GAAG,EAAlB;;AACA,QAAMC,SAAS,GAAIC,QAAD,IAAcF,SAAS,CAACG,IAAV,CAAeD,QAAf,CAAhC;;AACA,QAAME,QAAQ,GAAG,MAAMN,KAAvB;;AACA,QAAMO,QAAQ,GAAIC,MAAD,IAAY;AAC3BP,IAAAA,YAAY,CAACO,MAAD,EAAQR,KAAR,CAAZ;AACAE,IAAAA,SAAS,CAACO,OAAV,CAAmBL,QAAD,IAAcA,QAAQ,EAAxC;AACD,GAHD;;AAIA,SAAO;AAAEE,IAAAA,QAAF;AAAYH,IAAAA,SAAZ;AAAuBI,IAAAA;AAAvB,GAAP;AACD;;AAED,SAASG,SAAT,CAAmBC,QAAnB,EAA6B;AAC3BC,EAAAA,WAAW,CAACD,QAAQ,CAACE,KAAV,CAAX;AACAC,EAAAA,aAAa,CAACH,QAAQ,CAACI,OAAV,CAAb;AACD;;AAED,SAASH,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMG,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAjB;AACAF,EAAAA,QAAQ,CAACG,SAAT,GAAqBN,KAAK,CAACO,IAA3B;AACAJ,EAAAA,QAAQ,CAACK,KAAT,CAAeC,KAAf,GAAuBT,KAAK,CAACS,KAA7B;AACD;;AAED,SAASR,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,QAAMQ,UAAU,GAAGN,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAnB;AACAK,EAAAA,UAAU,CAACJ,SAAX,GAAuBJ,OAAO,CAACK,IAA/B;AACAG,EAAAA,UAAU,CAACF,KAAX,CAAiBC,KAAjB,GAAyBP,OAAO,CAACO,KAAjC;AACD;;AACD,IAAIX,QAAQ,GAAG;AACbE,EAAAA,KAAK,EAAE;AACLO,IAAAA,IAAI,EAAE,aADD;AAELE,IAAAA,KAAK,EAAE;AAFF,GADM;AAKbP,EAAAA,OAAO,EAAE;AACPK,IAAAA,IAAI,EAAE,eADC;AAEPE,IAAAA,KAAK,EAAE;AAFA;AALI,CAAf;;AAWA,SAASrB,YAAT,CAAsBO,MAAtB,EAA8BR,KAA9B,EAAqC;AACnC;AACA,UAAQQ,MAAM,CAACgB,IAAf;AACE,SAAK,mBAAL;AACExB,MAAAA,KAAK,CAACa,KAAN,CAAYO,IAAZ,GAAmBZ,MAAM,CAACY,IAA1B;AACA;;AACF,SAAK,sBAAL;AACEpB,MAAAA,KAAK,CAACa,KAAN,CAAYS,KAAZ,GAAoBd,MAAM,CAACc,KAA3B;;AACF;AACE;AAPJ;AASD;;AACD,MAAMG,KAAK,GAAG1B,WAAW,CAACY,QAAD,EAAWV,YAAX,CAAzB,C,CAAmD;;AACnDwB,KAAK,CAACtB,SAAN,CAAgB,MAAMO,SAAS,CAACe,KAAK,CAACnB,QAAN,EAAD,CAA/B;AACAI,SAAS,CAACe,KAAK,CAACnB,QAAN,EAAD,CAAT,C,CAA6B;;AAC7BmB,KAAK,CAAClB,QAAN,CAAe;AAAEiB,EAAAA,IAAI,EAAE,mBAAR;AAA6BJ,EAAAA,IAAI,EAAE;AAAnC,CAAf,E,CAAsE;;AACtEK,KAAK,CAAClB,QAAN,CAAe;AAAEiB,EAAAA,IAAI,EAAE,oBAAR;AAA8BF,EAAAA,KAAK,EAAE;AAArC,CAAf,E,CAA+D;;AAC/DZ,SAAS,CAACe,KAAK,CAACnB,QAAN,EAAD,CAAT","sourcesContent":["function createStore(state, stateChanger) {\n  const listeners = [];\n  const subscribe = (listener) => listeners.push(listener);\n  const getState = () => state;\n  const dispatch = (action) => {\n    stateChanger(action,state);\n    listeners.forEach((listener) => listener());\n  };\n  return { getState, subscribe, dispatch };\n}\n\nfunction renderApp(appState) {\n  renderTitle(appState.title);\n  renderContent(appState.content);\n}\n\nfunction renderTitle(title) {\n  const titleDOM = document.getElementById(\"title\");\n  titleDOM.innerHTML = title.text;\n  titleDOM.style.color = title.color;\n}\n\nfunction renderContent(content) {\n  const contentDOM = document.getElementById(\"content\");\n  contentDOM.innerHTML = content.text;\n  contentDOM.style.color = content.color;\n}\nlet appState = {\n  title: {\n    text: \"React.js 小书\",\n    color: \"red\",\n  },\n  content: {\n    text: \"React.js 小书内容\",\n    color: \"blue\",\n  },\n};\n\nfunction stateChanger(action, state) {\n  //具体修改内容\n  switch (action.type) {\n    case \"UPDATE_TITLE_TEXT\":\n      state.title.text = action.text;\n      break;\n    case \"UPDATE_CONTENT_COLOR\":\n      state.title.color = action.color;\n    default:\n      break;\n  }\n}\nconst store = createStore(appState, stateChanger); //数据仓库构建\nstore.subscribe(() => renderApp(store.getState()));\nrenderApp(store.getState()); // 首次渲染页面\nstore.dispatch({ type: \"UPDATE_TITLE_TEXT\", text: \"《React.js 小书》\" }); // 修改标题文本\nstore.dispatch({ type: \"UPDATE_TITLE_COLOR\", color: \"blue\" }); // 修改标题颜色\nrenderApp(store.getState());\n"]},"metadata":{},"sourceType":"module"}